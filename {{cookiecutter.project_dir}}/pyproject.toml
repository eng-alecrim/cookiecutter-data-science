[project]
name = "{{cookiecutter.project_dir.replace('-','_')}}"
version = "{{cookiecutter.version}}"
description = "{{cookiecutter.project_short_description}}"
readme = "README.md"
authors = [
    { name = "{{cookiecutter.full_name}}", email = "{{cookiecutter.email}}" }
]
requires-python = ">={{cookiecutter.python_version}}"
dependencies = [
    "src",
    "common",
    "pip>=25.0.1",
    "pydantic>=2.10.6",
    "pydantic-settings>=2.8.1",
    "loguru>=0.7.3",
]


[dependency-groups]
data = [
    "pandas>=2.2.3",
]

data-viz = [
    "plotly>=6.0.1",
    "nbformat>=5.10.4",
    "matplotlib>=3.10.1",
    "seaborn>=0.13.2",
]

machine-learning = [
    "scikit-learn>=1.6.1",
]

neural-network = [
    "torch>=2.6.0",
]

mlops = [
    "mlflow>=2.21.2",
]

dev = [
  "black[jupyter]>=24.10.0",
  "pytest>=8.3.4",
  "pytest-cov>=6.0.0",
  "ipykernel>=6.29.5",
  "ipywidgets>=8.1.5",
  "taskipy>=1.14.1",
  "ruff>=0.9.2",
  "ignr>=2.2",
  "requests>=2.32.3",
]

[tool.uv.sources]
src = { workspace = true }
common = { workspace = true }

[tool.uv.workspace]
members = ["packages/*"]

[tool.ruff]
line-length = 88
extend-exclude = ["migrations"]

[tool.ruff.lint]
preview = true
select = ["I", "F", "E", "W", "PL", "PT"]
ignore = ["PLR1711", "E731"]

[tool.ruff.format]
preview = true
quote-style = "double"

[tool.pytest.ini_options]
pythonpath = "."
addopts = "-p no:warnings"

[tool.taskipy.tasks]
lint = "ruff check . && ruff check . --diff"
format = "ruff check . --fix && ruff format ."
pre_test = "task lint"
test = "pytest tests -s -x --cov=packages --cov-report=html:coverage_report -vv"
